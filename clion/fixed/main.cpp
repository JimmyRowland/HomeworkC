#include <iostream>
#include "Calculator.h"
using namespace std;
using namespace cs20a;
int main() {

    char* expr[]={

            "12+(14*10+9)",
            "7 * 122 - ( 100 + 1/2 ) * 14",
            "50 * 2 *3 * (6/0)",
            "((17.2+2.9)*15-12.7)/(7-4.0)",
            "5 + ((1 + 2) *4) - 3",
            "12 * (4 + 6)",
            "1+ 2)/10",
            "2.21/6*1.1+(3.145-1.1)",
            "1*2.2+ x"
			"12+(14*10+9)",
		"7 * 122 - (100 + 1/2) * 14",
		"50 * 2 * 3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) * 4) - 3",
		"12 * (4 + 6)",
		"1 + 2)/10",
		"2.21/6*1.1+(3.145 -1.1)",
		"1 * 2.2 + x",
		"46.2*111+(3.15 - 4.2234/2)/6",
		"14.4*56/(121.44+257.95)/3.1",
		"888.777/231.3*14/6*(2+3*0.111)",
		"4242.4242/33.33 + (24.1/333 + 6.22)/3.7",
		"14 + 13 + 12 + 11 + 10 * (33.11/22.22) / 46.8",
		"999.1111111/46.88 + (129.99*46.22/3929)/6/7/3",
		"12+(14*10+9)",
		"7 * 122 - ( 100 + 1/2 ) * 14",
		"50 * 2 *3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) *4) - 3",
		"12 * (4 + 6)",
		"1+ 2)/10",
		"2.21/6*1.1+(3.145-1.1)",
		"1*2.2+ x"
		"12+(14*10+9)",
		"7 * 122 - (100 + 1/2) * 14",
		"50 * 2 * 3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) * 4) - 3",
		"12 * (4 + 6)",
		"1 + 2)/10",
		"2.21/6*1.1+(3.145 -1.1)",
		"1 * 2.2 + x",
		"46.2*111+(3.15 - 4.2234/2)/6",
		"14.4*56/(121.44+257.95)/3.1",
		"888.777/231.3*14/6*(2+3*0.111)",
		"4242.4242/33.33 + (24.1/333 + 6.22)/3.7",
		"14 + 13 + 12 + 11 + 10 * (33.11/22.22) / 46.8",
		"999.1111111/46.88 + (129.99*46.22/3929)/6/7/3",
		"12+(14*10+9)",
		"7 * 122 - ( 100 + 1/2 ) * 14",
		"50 * 2 *3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) *4) - 3",
		"12 * (4 + 6)",
		"1+ 2)/10",
		"2.21/6*1.1+(3.145-1.1)",
		"1*2.2+ x"
		"12+(14*10+9)",
		"7 * 122 - (100 + 1/2) * 14",
		"50 * 2 * 3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) * 4) - 3",
		"12 * (4 + 6)",
		"1 + 2)/10",
		"2.21/6*1.1+(3.145 -1.1)",
		"1 * 2.2 + x",
		"46.2*111+(3.15 - 4.2234/2)/6",
		"14.4*56/(121.44+257.95)/3.1",
		"888.777/231.3*14/6*(2+3*0.111)",
		"4242.4242/33.33 + (24.1/333 + 6.22)/3.7",
		"14 + 13 + 12 + 11 + 10 * (33.11/22.22) / 46.8",
		"999.1111111/46.88 + (129.99*46.22/3929)/6/7/3",
		"12+(14*10+9)",
		"7 * 122 - ( 100 + 1/2 ) * 14",
		"50 * 2 *3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) *4) - 3",
		"12 * (4 + 6)",
		"1+ 2)/10",
		"2.21/6*1.1+(3.145-1.1)",
		"1*2.2+ x"
		"12+(14*10+9)",
		"7 * 122 - (100 + 1/2) * 14",
		"50 * 2 * 3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) * 4) - 3",
		"12 * (4 + 6)",
		"1 + 2)/10",
		"2.21/6*1.1+(3.145 -1.1)",
		"1 * 2.2 + x",
		"46.2*111+(3.15 - 4.2234/2)/6",
		"14.4*56/(121.44+257.95)/3.1",
		"888.777/231.3*14/6*(2+3*0.111)",
		"4242.4242/33.33 + (24.1/333 + 6.22)/3.7",
		"14 + 13 + 12 + 11 + 10 * (33.11/22.22) / 46.8",
		"999.1111111/46.88 + (129.99*46.22/3929)/6/7/3",
		"12+(14*10+9)",
		"7 * 122 - ( 100 + 1/2 ) * 14",
		"50 * 2 *3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) *4) - 3",
		"12 * (4 + 6)",
		"1+ 2)/10",
		"2.21/6*1.1+(3.145-1.1)",
		"1*2.2+ x"
		"12+(14*10+9)",
		"7 * 122 - (100 + 1/2) * 14",
		"50 * 2 * 3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) * 4) - 3",
		"12 * (4 + 6)",
		"1 + 2)/10",
		"2.21/6*1.1+(3.145 -1.1)",
		"1 * 2.2 + x",
		"46.2*111+(3.15 - 4.2234/2)/6",
		"14.4*56/(121.44+257.95)/3.1",
		"888.777/231.3*14/6*(2+3*0.111)",
		"4242.42242/33.33 + (24.1/333 + 6.22)/3.7",
		"14 + 13 + 12 + 11 + 10 * (33.11/22.22) / 46.8",
		"999.1111111/46.88 + (129.99*46.22/3929)/6/7/3",
		"12+(14*10+9)",
		"7 * 122 - ( 100 + 1/2 ) * 14",
		"50 * 2 *3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) *4) - 3",
		"12 * (4 + 6)",
		"1+ 2)/10",
		"2.21/6*1.1+(3.145-1.1)",
		"1*2.2+ x"
		"12+(14*10+9)",
		"7 * 122 - (100 + 1/2) * 14",
		"50 * 2 * 3 * (6/0)",
		"((17.2+2.9)*15-12.7)/(7-4.0)",
		"5 + ((1 + 2) * 4) - 3",
		"12 * (4 + 6)",
		"1 + 2)/10",
		"2.21/6*12.1+(3.145 -1.1)",
		"1 * 2.2 + x",
		"46.2*111+(3.15 - 4.2234/2)/6",
		"14.4*563/(121.454+257.95)/3.1",
		"888.777/2351.3*14/6*(2+3*0.111)",
		"4242.4242/33.33 + (24.1/333 + 6.22)/3.7",
		"14 + 13 + 12 + 11 + 10 * (33.11/22.22) / 46.8",
		"999.11114111/46.88 + (129.99*46.22/3929)/6/7/3",

    };

    cout<< endl;
    cout<<" "<<"Stack Calculator Assignment"<<endl<<endl;
    int size = sizeof(expr)/sizeof(expr[0]);
    for (int i = 0; i < size; ++i) {
        try{
            cout<<" "<<"Infix Expression: "<< expr[i]<<endl;
			char *temp = Calculator::infixToPostfix(expr[i]);
            cout<<" "<< "Postfix Expression: "<< temp <<endl;
//			delete temp;
            cout<<" "<<"Result = "<< Calculator::evaluate(expr[i]);
        }catch(exception& e){
            cout << " "<< expr[i]<< ": "<< e.what();
        }
        cout << endl<<endl;
    }
//	int x;
//	cin >> x;
    return 0;
}